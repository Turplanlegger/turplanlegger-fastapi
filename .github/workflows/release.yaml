name: New Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - src/turplanlegger/__about__.py

jobs:
  publish-new-release:
    name: Publish new GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # To create tags and GitHub Releases
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version
        run: echo "NEW_VERSION=$(grep -v '^#' src/turplanlegger/__about__.py | cut -d'=' -f2 | xargs)" >> "$GITHUB_ENV"

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ env.NEW_VERSION }}" \
            --title "Release ${{ env.NEW_VERSION }}" \
            --generate-notes \
            --latest \
            docker-compose.yaml

  build-and-push-docker-image:
    name: Build and publish Docker image to GitHub Packages
    runs-on: ubuntu-latest
    needs: publish-new-release
    permissions:
      packages: write # To push new containers to GitHub Packages
    env:
      registry: ghcr.io
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          context: git
          images: ${{ env.registry }}/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=pep440,pattern={{version}}
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
